language: python
services:
  - memcached
  - redis-server
# Use Travis' build matrix and exclude functions rather than running tox
# directly so that we can run the builds in parallel and get coverage reports
# for each Python/Django version combo
python:
  - "2.7"
  - "3.3"
  - "3.4"
  - "3.5"
addons:
  postgresql: "9.4"
before_script:
  - psql -c 'create database travis_ci_test;' -U postgres
  - psql -c 'create database travis_ci_test2;' -U postgres
install:
  - pip install -U pip  # make sure we have the latest version
  - pip install -e .
  - pip install -r requirements/py`echo $TRAVIS_PYTHON_VERSION|cut -d'.' -f1`.txt "$DJANGO_SPEC"
  - pip install coveralls
script:
  - python run_tests.py --with-coverage
  - flake8 --ignore=E731,E402 .
after_success:
  - coveralls
env:
  - DJANGO_SPEC="Django>=1.7,<1.8"
  - DJANGO_SPEC="Django>=1.8,<1.9"
  - DJANGO_SPEC="Django>=1.9,<1.10"
  - DJANGO_SPEC="Django>=1.10,<1.11"
matrix:
  exclude:
    - python: "3.5"
      env: DJANGO_SPEC="Django>=1.7,<1.8"
    - python: "3.3"
      env: DJANGO_SPEC="Django>=1.9,<1.10"
    - python: "3.3"
      env: DJANGO_SPEC="Django>=1.10,<1.11"
# Adding sudo: False tells Travis to use their container-based infrastructure, which is somewhat faster.
sudo: False
